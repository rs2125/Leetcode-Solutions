class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int>m;//to store the element and its next greter element pair
        stack<int>st;
        int n = nums2.size();
        st.push(nums2[0]);
        for(int i=0;i<n;i++)
        {
            if(st.empty())
            {
                st.push(nums2[i]);
                continue;
            }
            //if stack is not empty, then pop an element from stack.
            //If the popped element is smaller than next, then
            //a) print the pair
            //b) keep popping while elements are smaller and stack is not empty
            
            while(!st.empty() && st.top()<nums2[i])
            {
                m[st.top()] = nums2[i];
                st.pop();
            }
            st.push(nums2[i]);
        }
        
        while(!st.empty())
        {
            m[st.top()] = -1;
            st.pop();
        }
        
        vector<int>ans;
        
        for(int i=0;i<nums1.size();i++)
            ans.push_back(m[nums1[i]]);
        
        return ans;
    }
};
